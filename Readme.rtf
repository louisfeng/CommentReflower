{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f69\froman\fcharset238\fprq2 Times New Roman CE;}{\f70\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f72\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f73\froman\fcharset162\fprq2 Times New Roman Tur;}{\f74\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f75\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f76\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f77\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f79\fswiss\fcharset238\fprq2 Arial CE;}{\f80\fswiss\fcharset204\fprq2 Arial Cyr;}{\f82\fswiss\fcharset161\fprq2 Arial Greek;}{\f83\fswiss\fcharset162\fprq2 Arial Tur;}
{\f84\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f85\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f86\fswiss\fcharset186\fprq2 Arial Baltic;}{\f87\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f89\fmodern\fcharset238\fprq1 Courier New CE;}
{\f90\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f92\fmodern\fcharset161\fprq1 Courier New Greek;}{\f93\fmodern\fcharset162\fprq1 Courier New Tur;}{\f94\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f95\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f96\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f97\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\rsidtbl \rsid4786488\rsid5649053\rsid9768301\rsid12073762\rsid12610600\rsid14301926
\rsid14686133}{\*\generator Microsoft Word 10.0.2627;}{\info{\author Ian}{\operator Ian}{\creatim\yr2005\mo6\dy19\hr22\min10}{\revtim\yr2006\mo1\dy3\hr22\min45}{\version6}{\edmins33}{\nofpages2}{\nofwords539}{\nofchars3074}{\nofcharsws3606}{\vern16437}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot14301926 \fet0\sectd 
\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\ul\insrsid14686133 Comment Reflower Version 1.3}{\b\f1\fs20\ul\insrsid12610600  Readme\line 
\par }{\f1\fs20\insrsid12610600 Comment Reflower is a Visual Studio .NET 2003 Plugin to reflow the text in comments in source files to have even word wrapping. It does more than simply j
ust wrapping all text in comment blocks. It attempts to recognise and wrap appropriately:
\par - bullet points
\par - lines that should never be reflowed
\par - XML preformat (<pre>) blocks
\par - HTML break (<BR>) commands
\par 
\par It is easiest to see this by demonstration, which can be done by taking the sample file ExampleFile.cpp from the install directory and open it in Visual Studio. Then follow the directions contained within to see Comment Reflower in action.
\par 
\par }{\f1\fs20\insrsid9768301 I}{\f1\fs20\insrsid12610600 f you have any feature requests or bug reports please send them to }{\f1\fs20\insrsid9768301 me at inowland@gmail.com}{\f1\fs20\insrsid12610600 
, particularly if it does "almost" what you require and you just need tweaks. Do realise however that I never see this tool becoming a reformatter - ie it takes well formatted but poorly wrapped comments and reflows them, it }{\b\f1\fs20\insrsid12610600 
does not }{\f1\fs20\insrsid12610600 take invalidly formatted comments and restructure (fix) them.
\par }{\b\f1\fs20\ul\insrsid12610600 
\par Changelog
\par }{\b\f1\fs20\ul\insrsid5649053 
\par }{\b\f1\fs20\insrsid5649053\charrsid5649053 3-Jan-2006}{\b\f1\fs20\insrsid5649053  \endash  Release 1.4
\par 
\par }{\f1\fs20\insrsid5649053\charrsid5649053 - }{\f1\fs20\insrsid5649053 added Visual Studio 2005 support as a separate installer package. The two versions can work side by side and share the same settings file. Thanks to Wesley Smith
 and Jeff Stewart for their help.
\par }{\f1\fs20\insrsid12073762 
\par }{\f1\fs20\insrsid5649053 - added a \'93align Parameters\'94 command that can be enabled from the settings dialog. This is not a complete feature at the }{\f1\fs20\insrsid12073762 moment;}{\f1\fs20\insrsid5649053 
 however what it does is change a function call that looks like this:
\par 
\par }{\f2\fs20\insrsid5649053\charrsid5649053 call.function(param1,
\par            param2,
\par            param3);
\par }{\f1\fs20\insrsid5649053 
\par Into this:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid5649053 {\f2\fs20\insrsid5649053\charrsid5649053 call.function(param1,
\par            }{\f2\fs20\insrsid5649053    }{\f2\fs20\insrsid5649053\charrsid5649053 param2,
\par }{\f2\fs20\insrsid5649053               param}{\f2\fs20\insrsid5649053\charrsid5649053 3);
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\fs20\ul\insrsid14686133 
\par }{\f1\fs20\insrsid5649053 i.e. Parameters are shifted left or right to match the left parentheses.
\par }{\b\f1\fs20\ul\insrsid5649053 
\par }{\b\f1\fs20\insrsid14686133\charrsid14686133 21-Jun-2005 \endash  Release 1.3}{\b\f1\fs20\insrsid14686133 
\par 
\par }{\f1\fs20\insrsid14686133\charrsid14686133 - fixed bug where BlockStartType and BlockEndType could not be set from the Settings dialog. Thanks to Sebastian Schuberth for finding.
\par }{\b\f1\fs20\ul\insrsid14686133 
\par 
\par }{\b\f1\fs20\insrsid14301926\charrsid14301926 19-Jun-2005}{\b\f1\fs20\insrsid14301926  \endash  Release 1.2
\par }{\f1\fs20\insrsid12610600 
\par }{\f1\fs20\insrsid14301926 - fixed the type of line endings that get inserted. Previously all line endings were just Unix style \'93\\n\'94\rquote s, creating a mix within Windows files that Visual Studio sometimes took umbrage at.  So now
\par Comment Reflower inserts the same type (\'93\\n\'94 or \'93\\r\\n\'94) as whatever the line that you clicked \'93Reflow\'94 on. Thanks to Oren Hurvitz for find}{\f1\fs20\insrsid12610600 ing.}{\f1\fs20\insrsid14301926 
\par 
\par - Changed the way the Settings dialog is sized to allow it to work on higher resolution displays. Thanks to }{\f1\fs20\insrsid14301926\charrsid14301926 Dewayne Christensen}{\f1\fs20\insrsid12610600  for finding}{\f1\fs20\insrsid14301926 .
\par 
\par - Removed a somewhat arbitrary requirement that the start of line be non empty, in order to allow comments like this to be reflowed:
\par 
\par /*}{\f1\fs20\insrsid12610600  Reflow}{\f1\fs20\insrsid14301926 
\par }{\f1\fs20\insrsid12610600    this
\par }{\f1\fs20\insrsid4786488 sucker}{\f1\fs20\insrsid12610600 
\par }{\f1\fs20\insrsid4786488 please.
\par }{\f1\fs20\insrsid12610600 */
\par 
\par Thanks to }{\f1\fs20\insrsid12610600\charrsid12610600 Sebastian Schuberth}{\f1\fs20\insrsid12610600  for finding. Note that you have to change the settings from the default to reflow this type of block.}{\f1\fs20\insrsid12610600\charrsid12610600 
\par }{\f1\fs20\insrsid12610600 
\par }{\b\f1\fs20\insrsid12610600 16-Nov-2004 - Release 1.1
\par }{\f1\fs20\insrsid12610600 
\par - Changed the way that doxygen C-style block 2's (/*!) work to be more consistent with the way most people seem to use them. Basically the change was to make the start 
block "Never on own Line", but also changed the code to allow "Never on own Line" block starts to be matched without their trailing spaces on an empty line. This allows you to use any of the following:
\par 
\par /*!
\par  * The above line has no trailing space but the block is still matched, 
\par  *  }{\f1\fs20\insrsid4786488 however it wont be pulled up }{\f1\fs20\insrsid12610600 to one line.
\par  */
\par 
\par /*! Text on the same line as the block start.
\par  * And the block will still be matched succesfully.
\par  */
\par 
\par /*! And all on one line still works okay as well. */
\par 
\par This is different to the default behaviour for style 1 comments (/**), where the first type will be pulled up to one line and the second type will fail match. You can of course change this behaviour using the settings dialog.
\par 
\par }{\b\f1\fs20\insrsid12610600 07-Nov-2004 - Release 1.0}{\f1\fs20\insrsid12610600 
\par 
\par - Initial Release
\par 
\par }}